{"ast":null,"code":"import { GET_ERRORS, SET_CURRENT_USER, ALERT_REGISTRATION } from './types';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios'; //Register\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post('api/users/register', userData).then(function (res) {\n      history.push('/login');\n      dispatch({\n        type: ALERT_REGISTRATION,\n        payload: \"Registered!\"\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Login\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('api/users/login', userData).then(function (res) {\n      var token = res.data.token; //Save token to local storage\n\n      localStorage.setItem('jwtToken', token); //Set Auth header\n\n      setAuthToken(token); //Decode token to get current user data\n\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //set current user function\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};","map":{"version":3,"sources":["E:\\Docs\\mernstack\\Rating App\\client\\src\\redux\\actions\\authActions.js"],"names":["GET_ERRORS","SET_CURRENT_USER","ALERT_REGISTRATION","setAuthToken","jwt_decode","axios","registerUser","userData","history","dispatch","post","then","res","push","type","payload","catch","err","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,EAAuCC,kBAAvC,QAAiE,SAAjE;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAGA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAE5DJ,IAAAA,KAAK,CAACK,IAAN,CAAW,oBAAX,EAAiCH,QAAjC,EACII,IADJ,CACS,UAAAC,GAAG,EAAI;AACPJ,MAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACAJ,MAAAA,QAAQ,CAAC;AACNK,QAAAA,IAAI,EAAEZ,kBADA;AAENa,QAAAA,OAAO,EAAE;AAFH,OAAD,CAAR;AAIF,KAPP,EASIC,KATJ,CASU,UAAAC,GAAG,EAAI;AACXR,MAAAA,QAAQ,CAAC;AACNK,QAAAA,IAAI,EAAEd,UADA;AAENe,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAFhB,OAAD,CAAR;AAIF,KAdJ;AAgBF,GAlB2B;AAAA,CAArB,C,CAoBP;;AACA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACb,QAAD;AAAA,SAAc,UAAAE,QAAQ,EAAI;AAChDJ,IAAAA,KAAK,CAACK,IAAN,CAAW,iBAAX,EAA8BH,QAA9B,EACII,IADJ,CACS,UAAAC,GAAG,EAAI;AAAA,UACFS,KADE,GACQT,GAAG,CAACO,IADZ,CACFE,KADE,EAEV;;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAHU,CAIV;;AACAlB,MAAAA,YAAY,CAACkB,KAAD,CAAZ,CALU,CAMV;;AACA,UAAMG,OAAO,GAAGpB,UAAU,CAACiB,KAAD,CAA1B;AAEAZ,MAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AAEF,KAZJ,EAaIR,KAbJ,CAaU,UAAAC,GAAG,EAAI;AACXR,MAAAA,QAAQ,CAAC;AACNK,QAAAA,IAAI,EAAEd,UADA;AAENe,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaC;AAFhB,OAAD,CAAR;AAIF,KAlBJ;AAmBF,GApBwB;AAAA,CAAlB,C,CAuBP;;AACA,OAAO,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAa;AACxC,SAAO;AACJV,IAAAA,IAAI,EAAEb,gBADF;AAEJc,IAAAA,OAAO,EAAES;AAFL,GAAP;AAIF,CALM","sourcesContent":["import { GET_ERRORS, SET_CURRENT_USER, ALERT_REGISTRATION } from './types';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\n//Register\r\nexport const registerUser = (userData, history) => dispatch => {\r\n\r\n   axios.post('api/users/register', userData)\r\n      .then(res => {\r\n            history.push('/login');\r\n            dispatch({\r\n               type: ALERT_REGISTRATION,\r\n               payload: \"Registered!\"\r\n            })\r\n         }\r\n      )\r\n      .catch(err => {\r\n         dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n         })\r\n      });\r\n\r\n};\r\n\r\n//Login\r\nexport const loginUser = (userData) => dispatch => {\r\n   axios.post('api/users/login', userData)\r\n      .then(res => {\r\n         const { token } = res.data;\r\n         //Save token to local storage\r\n         localStorage.setItem('jwtToken', token);\r\n         //Set Auth header\r\n         setAuthToken(token);\r\n         //Decode token to get current user data\r\n         const decoded = jwt_decode(token);\r\n\r\n         dispatch(setCurrentUser(decoded));\r\n\r\n      })\r\n      .catch(err => {\r\n         dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n         })\r\n      });\r\n};\r\n\r\n\r\n//set current user function\r\nexport const setCurrentUser = (decoded) => {\r\n   return {\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n   };\r\n};"]},"metadata":{},"sourceType":"module"}