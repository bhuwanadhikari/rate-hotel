{"ast":null,"code":"import { GET_ERRORS, SET_CURRENT_USER, ALERT_REGISTRATION, HIDE_REGMODAL } from './types';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios'; //Register\n\nexport var registerUser = function registerUser(userData, history) {\n  return function (dispatch) {\n    axios.post('api/users/register', userData).then(function (res) {\n      history.push('/login');\n      dispatch({\n        type: ALERT_REGISTRATION,\n        payload: res.data.name\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //Hide registration modal\n\nexport var hideRegModal = function hideRegModal() {\n  return function (dispatch) {\n    dispatch({\n      type: HIDE_REGMODAL,\n      payload: null\n    });\n  };\n}; //Login\n\nexport var loginUser = function loginUser(userData) {\n  return function (dispatch) {\n    axios.post('api/users/login', userData).then(function (res) {\n      var token = res.data.token; //Save token to local storage\n\n      localStorage.setItem('jwtToken', token); //Set Auth header\n\n      setAuthToken(token); //Decode token to get current user data\n\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; //set current user function\n\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; //Log User Out\n\nexport var logUserOut = function logUserOut() {\n  return function (dispatch) {\n    //Delete token\n    localStorage.removeItem('jwtToken'); //Remove auth header\n\n    setAuthToken(false); //Set current user to {}\n\n    dispatch(setCurrentUser({})); //dispatch to update the store\n    //\n  };\n};","map":{"version":3,"sources":["D:\\Docs\\mernstack\\Rating App\\client\\src\\redux\\actions\\authActions.js"],"names":["GET_ERRORS","SET_CURRENT_USER","ALERT_REGISTRATION","HIDE_REGMODAL","setAuthToken","jwt_decode","axios","registerUser","userData","history","dispatch","post","then","res","push","type","payload","data","name","catch","err","response","hideRegModal","loginUser","token","localStorage","setItem","decoded","setCurrentUser","logUserOut","removeItem"],"mappings":"AAAA,SACGA,UADH,EAEGC,gBAFH,EAGGC,kBAHH,EAIGC,aAJH,QAKO,SALP;AAMA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAGA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD,EAAWC,OAAX;AAAA,SAAuB,UAAAC,QAAQ,EAAI;AAE5DJ,IAAAA,KAAK,CAACK,IAAN,CAAW,oBAAX,EAAiCH,QAAjC,EACII,IADJ,CACS,UAAAC,GAAG,EAAI;AACVJ,MAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACAJ,MAAAA,QAAQ,CAAC;AACNK,QAAAA,IAAI,EAAEb,kBADA;AAENc,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASC;AAFZ,OAAD,CAAR;AAIC,KAPP,EASIC,KATJ,CASU,UAAAC,GAAG;AAAA,aAAIV,QAAQ,CAAC;AACpBK,QAAAA,IAAI,EAAEf,UADc;AAEpBgB,QAAAA,OAAO,EAAEI,GAAG,CAACC,QAAJ,CAAaJ;AAFF,OAAD,CAAZ;AAAA,KATb;AAcF,GAhB2B;AAAA,CAArB,C,CAmBP;;AACA,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAAAZ,QAAQ,EAAK;AAC5CA,IAAAA,QAAQ,CAAC;AACNK,MAAAA,IAAI,EAAEZ,aADA;AAENa,MAAAA,OAAO,EAAE;AAFH,KAAD,CAAR;AAIF,GAL2B;AAAA,CAArB,C,CAQP;;AACA,OAAO,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACf,QAAD;AAAA,SAAc,UAAAE,QAAQ,EAAI;AAChDJ,IAAAA,KAAK,CAACK,IAAN,CAAW,iBAAX,EAA8BH,QAA9B,EACII,IADJ,CACS,UAAAC,GAAG,EAAI;AAAA,UACFW,KADE,GACQX,GAAG,CAACI,IADZ,CACFO,KADE,EAEV;;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAHU,CAIV;;AACApB,MAAAA,YAAY,CAACoB,KAAD,CAAZ,CALU,CAMV;;AACA,UAAMG,OAAO,GAAGtB,UAAU,CAACmB,KAAD,CAA1B;AAEAd,MAAAA,QAAQ,CAACkB,cAAc,CAACD,OAAD,CAAf,CAAR;AAEF,KAZJ,EAaIR,KAbJ,CAaU,UAAAC,GAAG;AAAA,aAAKV,QAAQ,CAAC;AAClBK,QAAAA,IAAI,EAAEf,UADY;AAElBgB,QAAAA,OAAO,EAAEI,GAAG,CAACC,QAAJ,CAAaJ;AAFJ,OAAD,CAAb;AAAA,KAbb;AAiBF,GAlBwB;AAAA,CAAlB,C,CAqBP;;AACA,OAAO,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAa;AACxC,SAAO;AACJZ,IAAAA,IAAI,EAAEd,gBADF;AAEJe,IAAAA,OAAO,EAAEW;AAFL,GAAP;AAIF,CALM,C,CAQP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAnB,QAAQ,EAAI;AACzC;AACAe,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB,EAFyC,CAGzC;;AACA1B,IAAAA,YAAY,CAAC,KAAD,CAAZ,CAJyC,CAKzC;;AACAM,IAAAA,QAAQ,CAACkB,cAAc,CAAC,EAAD,CAAf,CAAR,CANyC,CAMX;AAC9B;AACF,GARyB;AAAA,CAAnB","sourcesContent":["import {\r\n   GET_ERRORS,\r\n   SET_CURRENT_USER,\r\n   ALERT_REGISTRATION,\r\n   HIDE_REGMODAL\r\n} from './types';\r\nimport setAuthToken from '../../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\n//Register\r\nexport const registerUser = (userData, history) => dispatch => {\r\n\r\n   axios.post('api/users/register', userData)\r\n      .then(res => {\r\n         history.push('/login');\r\n         dispatch({\r\n            type: ALERT_REGISTRATION,\r\n            payload: res.data.name\r\n         });\r\n         }\r\n      )\r\n      .catch(err => dispatch({\r\n         type: GET_ERRORS,\r\n         payload: err.response.data})\r\n      );\r\n\r\n};\r\n\r\n\r\n//Hide registration modal\r\nexport const hideRegModal = () => dispatch =>  {\r\n   dispatch({\r\n      type: HIDE_REGMODAL,\r\n      payload: null\r\n   });\r\n};\r\n\r\n\r\n//Login\r\nexport const loginUser = (userData) => dispatch => {\r\n   axios.post('api/users/login', userData)\r\n      .then(res => {\r\n         const { token } = res.data;\r\n         //Save token to local storage\r\n         localStorage.setItem('jwtToken', token);\r\n         //Set Auth header\r\n         setAuthToken(token);\r\n         //Decode token to get current user data\r\n         const decoded = jwt_decode(token);\r\n\r\n         dispatch(setCurrentUser(decoded));\r\n\r\n      })\r\n      .catch(err => (dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data}))\r\n      );\r\n};\r\n\r\n\r\n//set current user function\r\nexport const setCurrentUser = (decoded) => {\r\n   return {\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded\r\n   };\r\n};\r\n\r\n\r\n//Log User Out\r\nexport const logUserOut = () => dispatch => {\r\n   //Delete token\r\n   localStorage.removeItem('jwtToken');\r\n   //Remove auth header\r\n   setAuthToken(false);\r\n   //Set current user to {}\r\n   dispatch(setCurrentUser({})); //dispatch to update the store\r\n   //\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}